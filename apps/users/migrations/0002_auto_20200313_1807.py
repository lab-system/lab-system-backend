# Generated by Django 2.2.10 on 2020-03-13 18:07

from django.db import migrations, models
import imagekit.models.fields
import users.models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.RenameField(
            model_name='userprofile',
            old_name='mobile',
            new_name='phone',
        ),
        migrations.AddField(
            model_name='userprofile',
            name='avatar',
            field=imagekit.models.fields.ProcessedImageField(blank=True, default='avatar/default.jpg', help_text='头像', null=True, upload_to=users.models.user_avatar_path, verbose_name='头像'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='cname',
            field=models.CharField(blank=True, help_text='姓名', max_length=30, null=True, verbose_name='姓名'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='last_login_ip',
            field=models.GenericIPAddressField(blank=True, help_text='上次登录IP', null=True, verbose_name='上次登录IP'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='login_count',
            field=models.IntegerField(blank=True, default=0, help_text='登录次数', null=True, verbose_name='登录次数'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='stuId',
            field=models.IntegerField(blank=True, help_text='学号', null=True, verbose_name='学号'),
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(help_text='URL', max_length=128, verbose_name='URL')),
                ('user_type', models.CharField(choices=[('customuser', '自定义用户'), ('anonymous', '匿名用户'), ('authenticated', '已认证用户')], default=('authenticated', '已认证用户'), help_text='用户类型', max_length=16, verbose_name='用户类型')),
                ('method', models.CharField(choices=[('ALL', 'all'), ('GET', 'list/read'), ('POST', 'create'), ('PUT', 'update'), ('DELETE', 'delete')], default='ALL', help_text='方法类型', max_length=10, verbose_name='方法类型')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('remark', models.TextField(blank=True, help_text='备注', null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '白名单URL',
                'verbose_name_plural': '白名单URL',
                'unique_together': {('url', 'method')},
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='名称', max_length=128, verbose_name='名称')),
                ('cname', models.CharField(blank=True, help_text='中文名称', max_length=128, null=True, verbose_name='中文名称')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('remark', models.TextField(blank=True, help_text='备注', null=True, verbose_name='备注')),
                ('description', models.CharField(blank=True, help_text='角色描述', max_length=500, verbose_name='角色描述')),
                ('urls', models.ManyToManyField(blank=True, help_text='url权限', to='users.Url', verbose_name='url权限')),
            ],
            options={
                'verbose_name': '用户角色',
                'verbose_name_plural': '用户角色',
                'unique_together': {('name',)},
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='roles',
            field=models.ManyToManyField(blank=True, help_text='角色', to='users.Role', verbose_name='角色'),
        ),
    ]
